version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: >
      etcd
      -advertise-client-urls http://etcd:2379
      -listen-client-urls http://0.0.0.0:2379
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:latest
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    ports:
      - "19530:19530"  # Milvus gRPC
      - "9091:9091"    # Milvus REST
    depends_on:
      - etcd
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  ai-service:
    container_name: ai-service
    build:
      context: ./ai-service
      args:
        DEBUG: ${DEBUG}   # <-- read from .env
    image: ai-service:latest
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_PROJECT_ID=${OPENAI_PROJECT_ID}
      - GOOGLE_SEARCH_CSE_ID=${GOOGLE_SEARCH_CSE_ID}
      - GOOGLE_SEARCH_API_KEY=${GOOGLE_SEARCH_API_KEY}
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
    ports:
      - "${AI_SERVICE_PORT:-8000}:8000"
    depends_on:
      milvus:
        condition: service_healthy

  agent-ui:
    container_name: agent-ui
    build:
      context: ./agent-ui
      args:
        DEBUG: ${DEBUG}   # <-- read from .env
    image: agent-ui:latest
    ports:
      - "${AGENT_UI_PORT:-3000}:3000"
    depends_on:
      - ai-service

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - agent-ui
      - ai-service